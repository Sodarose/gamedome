// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Equip.proto

package com.game.protocol;

public final class EquipProtocol {
  private EquipProtocol() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface EquipInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:EquipInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 id = 1;</code>
     * @return The id.
     */
    int getId();

    /**
     * <code>string name = 2;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <code>string name = 2;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>int32 level = 3;</code>
     * @return The level.
     */
    int getLevel();

    /**
     * <code>int32 quality = 4;</code>
     * @return The quality.
     */
    int getQuality();

    /**
     * <code>int32 part = 5;</code>
     * @return The part.
     */
    int getPart();

    /**
     * <code>int32 durability = 6;</code>
     * @return The durability.
     */
    int getDurability();

    /**
     * <code>int32 maxDurability = 7;</code>
     * @return The maxDurability.
     */
    int getMaxDurability();

    /**
     * <code>int32 hp = 8;</code>
     * @return The hp.
     */
    int getHp();

    /**
     * <code>int32 mp = 9;</code>
     * @return The mp.
     */
    int getMp();

    /**
     * <code>int32 phyAttack = 10;</code>
     * @return The phyAttack.
     */
    int getPhyAttack();

    /**
     * <code>int32 magicAttack = 11;</code>
     * @return The magicAttack.
     */
    int getMagicAttack();

    /**
     * <code>int32 phyDefense = 12;</code>
     * @return The phyDefense.
     */
    int getPhyDefense();

    /**
     * <code>int32 magicDefense = 13;</code>
     * @return The magicDefense.
     */
    int getMagicDefense();

    /**
     * <code>double attackSpeed = 14;</code>
     * @return The attackSpeed.
     */
    double getAttackSpeed();

    /**
     * <code>double moveSpeed = 15;</code>
     * @return The moveSpeed.
     */
    double getMoveSpeed();
  }
  /**
   * Protobuf type {@code EquipInfo}
   */
  public  static final class EquipInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:EquipInfo)
      EquipInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EquipInfo.newBuilder() to construct.
    private EquipInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EquipInfo() {
      name_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new EquipInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private EquipInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              id_ = input.readInt32();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 24: {

              level_ = input.readInt32();
              break;
            }
            case 32: {

              quality_ = input.readInt32();
              break;
            }
            case 40: {

              part_ = input.readInt32();
              break;
            }
            case 48: {

              durability_ = input.readInt32();
              break;
            }
            case 56: {

              maxDurability_ = input.readInt32();
              break;
            }
            case 64: {

              hp_ = input.readInt32();
              break;
            }
            case 72: {

              mp_ = input.readInt32();
              break;
            }
            case 80: {

              phyAttack_ = input.readInt32();
              break;
            }
            case 88: {

              magicAttack_ = input.readInt32();
              break;
            }
            case 96: {

              phyDefense_ = input.readInt32();
              break;
            }
            case 104: {

              magicDefense_ = input.readInt32();
              break;
            }
            case 113: {

              attackSpeed_ = input.readDouble();
              break;
            }
            case 121: {

              moveSpeed_ = input.readDouble();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.game.protocol.EquipProtocol.internal_static_EquipInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.game.protocol.EquipProtocol.internal_static_EquipInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.game.protocol.EquipProtocol.EquipInfo.class, com.game.protocol.EquipProtocol.EquipInfo.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>int32 id = 1;</code>
     * @return The id.
     */
    public int getId() {
      return id_;
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <code>string name = 2;</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 2;</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LEVEL_FIELD_NUMBER = 3;
    private int level_;
    /**
     * <code>int32 level = 3;</code>
     * @return The level.
     */
    public int getLevel() {
      return level_;
    }

    public static final int QUALITY_FIELD_NUMBER = 4;
    private int quality_;
    /**
     * <code>int32 quality = 4;</code>
     * @return The quality.
     */
    public int getQuality() {
      return quality_;
    }

    public static final int PART_FIELD_NUMBER = 5;
    private int part_;
    /**
     * <code>int32 part = 5;</code>
     * @return The part.
     */
    public int getPart() {
      return part_;
    }

    public static final int DURABILITY_FIELD_NUMBER = 6;
    private int durability_;
    /**
     * <code>int32 durability = 6;</code>
     * @return The durability.
     */
    public int getDurability() {
      return durability_;
    }

    public static final int MAXDURABILITY_FIELD_NUMBER = 7;
    private int maxDurability_;
    /**
     * <code>int32 maxDurability = 7;</code>
     * @return The maxDurability.
     */
    public int getMaxDurability() {
      return maxDurability_;
    }

    public static final int HP_FIELD_NUMBER = 8;
    private int hp_;
    /**
     * <code>int32 hp = 8;</code>
     * @return The hp.
     */
    public int getHp() {
      return hp_;
    }

    public static final int MP_FIELD_NUMBER = 9;
    private int mp_;
    /**
     * <code>int32 mp = 9;</code>
     * @return The mp.
     */
    public int getMp() {
      return mp_;
    }

    public static final int PHYATTACK_FIELD_NUMBER = 10;
    private int phyAttack_;
    /**
     * <code>int32 phyAttack = 10;</code>
     * @return The phyAttack.
     */
    public int getPhyAttack() {
      return phyAttack_;
    }

    public static final int MAGICATTACK_FIELD_NUMBER = 11;
    private int magicAttack_;
    /**
     * <code>int32 magicAttack = 11;</code>
     * @return The magicAttack.
     */
    public int getMagicAttack() {
      return magicAttack_;
    }

    public static final int PHYDEFENSE_FIELD_NUMBER = 12;
    private int phyDefense_;
    /**
     * <code>int32 phyDefense = 12;</code>
     * @return The phyDefense.
     */
    public int getPhyDefense() {
      return phyDefense_;
    }

    public static final int MAGICDEFENSE_FIELD_NUMBER = 13;
    private int magicDefense_;
    /**
     * <code>int32 magicDefense = 13;</code>
     * @return The magicDefense.
     */
    public int getMagicDefense() {
      return magicDefense_;
    }

    public static final int ATTACKSPEED_FIELD_NUMBER = 14;
    private double attackSpeed_;
    /**
     * <code>double attackSpeed = 14;</code>
     * @return The attackSpeed.
     */
    public double getAttackSpeed() {
      return attackSpeed_;
    }

    public static final int MOVESPEED_FIELD_NUMBER = 15;
    private double moveSpeed_;
    /**
     * <code>double moveSpeed = 15;</code>
     * @return The moveSpeed.
     */
    public double getMoveSpeed() {
      return moveSpeed_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0) {
        output.writeInt32(1, id_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      if (level_ != 0) {
        output.writeInt32(3, level_);
      }
      if (quality_ != 0) {
        output.writeInt32(4, quality_);
      }
      if (part_ != 0) {
        output.writeInt32(5, part_);
      }
      if (durability_ != 0) {
        output.writeInt32(6, durability_);
      }
      if (maxDurability_ != 0) {
        output.writeInt32(7, maxDurability_);
      }
      if (hp_ != 0) {
        output.writeInt32(8, hp_);
      }
      if (mp_ != 0) {
        output.writeInt32(9, mp_);
      }
      if (phyAttack_ != 0) {
        output.writeInt32(10, phyAttack_);
      }
      if (magicAttack_ != 0) {
        output.writeInt32(11, magicAttack_);
      }
      if (phyDefense_ != 0) {
        output.writeInt32(12, phyDefense_);
      }
      if (magicDefense_ != 0) {
        output.writeInt32(13, magicDefense_);
      }
      if (attackSpeed_ != 0D) {
        output.writeDouble(14, attackSpeed_);
      }
      if (moveSpeed_ != 0D) {
        output.writeDouble(15, moveSpeed_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      if (level_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, level_);
      }
      if (quality_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, quality_);
      }
      if (part_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, part_);
      }
      if (durability_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, durability_);
      }
      if (maxDurability_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, maxDurability_);
      }
      if (hp_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, hp_);
      }
      if (mp_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, mp_);
      }
      if (phyAttack_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, phyAttack_);
      }
      if (magicAttack_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, magicAttack_);
      }
      if (phyDefense_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, phyDefense_);
      }
      if (magicDefense_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, magicDefense_);
      }
      if (attackSpeed_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(14, attackSpeed_);
      }
      if (moveSpeed_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(15, moveSpeed_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.game.protocol.EquipProtocol.EquipInfo)) {
        return super.equals(obj);
      }
      com.game.protocol.EquipProtocol.EquipInfo other = (com.game.protocol.EquipProtocol.EquipInfo) obj;

      if (getId()
          != other.getId()) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (getLevel()
          != other.getLevel()) return false;
      if (getQuality()
          != other.getQuality()) return false;
      if (getPart()
          != other.getPart()) return false;
      if (getDurability()
          != other.getDurability()) return false;
      if (getMaxDurability()
          != other.getMaxDurability()) return false;
      if (getHp()
          != other.getHp()) return false;
      if (getMp()
          != other.getMp()) return false;
      if (getPhyAttack()
          != other.getPhyAttack()) return false;
      if (getMagicAttack()
          != other.getMagicAttack()) return false;
      if (getPhyDefense()
          != other.getPhyDefense()) return false;
      if (getMagicDefense()
          != other.getMagicDefense()) return false;
      if (java.lang.Double.doubleToLongBits(getAttackSpeed())
          != java.lang.Double.doubleToLongBits(
              other.getAttackSpeed())) return false;
      if (java.lang.Double.doubleToLongBits(getMoveSpeed())
          != java.lang.Double.doubleToLongBits(
              other.getMoveSpeed())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + LEVEL_FIELD_NUMBER;
      hash = (53 * hash) + getLevel();
      hash = (37 * hash) + QUALITY_FIELD_NUMBER;
      hash = (53 * hash) + getQuality();
      hash = (37 * hash) + PART_FIELD_NUMBER;
      hash = (53 * hash) + getPart();
      hash = (37 * hash) + DURABILITY_FIELD_NUMBER;
      hash = (53 * hash) + getDurability();
      hash = (37 * hash) + MAXDURABILITY_FIELD_NUMBER;
      hash = (53 * hash) + getMaxDurability();
      hash = (37 * hash) + HP_FIELD_NUMBER;
      hash = (53 * hash) + getHp();
      hash = (37 * hash) + MP_FIELD_NUMBER;
      hash = (53 * hash) + getMp();
      hash = (37 * hash) + PHYATTACK_FIELD_NUMBER;
      hash = (53 * hash) + getPhyAttack();
      hash = (37 * hash) + MAGICATTACK_FIELD_NUMBER;
      hash = (53 * hash) + getMagicAttack();
      hash = (37 * hash) + PHYDEFENSE_FIELD_NUMBER;
      hash = (53 * hash) + getPhyDefense();
      hash = (37 * hash) + MAGICDEFENSE_FIELD_NUMBER;
      hash = (53 * hash) + getMagicDefense();
      hash = (37 * hash) + ATTACKSPEED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getAttackSpeed()));
      hash = (37 * hash) + MOVESPEED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getMoveSpeed()));
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.game.protocol.EquipProtocol.EquipInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.game.protocol.EquipProtocol.EquipInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.game.protocol.EquipProtocol.EquipInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.game.protocol.EquipProtocol.EquipInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.game.protocol.EquipProtocol.EquipInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.game.protocol.EquipProtocol.EquipInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.game.protocol.EquipProtocol.EquipInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.game.protocol.EquipProtocol.EquipInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.game.protocol.EquipProtocol.EquipInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.game.protocol.EquipProtocol.EquipInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.game.protocol.EquipProtocol.EquipInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.game.protocol.EquipProtocol.EquipInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.game.protocol.EquipProtocol.EquipInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code EquipInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:EquipInfo)
        com.game.protocol.EquipProtocol.EquipInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.game.protocol.EquipProtocol.internal_static_EquipInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.game.protocol.EquipProtocol.internal_static_EquipInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.game.protocol.EquipProtocol.EquipInfo.class, com.game.protocol.EquipProtocol.EquipInfo.Builder.class);
      }

      // Construct using com.game.protocol.EquipProtocol.EquipInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = 0;

        name_ = "";

        level_ = 0;

        quality_ = 0;

        part_ = 0;

        durability_ = 0;

        maxDurability_ = 0;

        hp_ = 0;

        mp_ = 0;

        phyAttack_ = 0;

        magicAttack_ = 0;

        phyDefense_ = 0;

        magicDefense_ = 0;

        attackSpeed_ = 0D;

        moveSpeed_ = 0D;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.game.protocol.EquipProtocol.internal_static_EquipInfo_descriptor;
      }

      @java.lang.Override
      public com.game.protocol.EquipProtocol.EquipInfo getDefaultInstanceForType() {
        return com.game.protocol.EquipProtocol.EquipInfo.getDefaultInstance();
      }

      @java.lang.Override
      public com.game.protocol.EquipProtocol.EquipInfo build() {
        com.game.protocol.EquipProtocol.EquipInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.game.protocol.EquipProtocol.EquipInfo buildPartial() {
        com.game.protocol.EquipProtocol.EquipInfo result = new com.game.protocol.EquipProtocol.EquipInfo(this);
        result.id_ = id_;
        result.name_ = name_;
        result.level_ = level_;
        result.quality_ = quality_;
        result.part_ = part_;
        result.durability_ = durability_;
        result.maxDurability_ = maxDurability_;
        result.hp_ = hp_;
        result.mp_ = mp_;
        result.phyAttack_ = phyAttack_;
        result.magicAttack_ = magicAttack_;
        result.phyDefense_ = phyDefense_;
        result.magicDefense_ = magicDefense_;
        result.attackSpeed_ = attackSpeed_;
        result.moveSpeed_ = moveSpeed_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.game.protocol.EquipProtocol.EquipInfo) {
          return mergeFrom((com.game.protocol.EquipProtocol.EquipInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.game.protocol.EquipProtocol.EquipInfo other) {
        if (other == com.game.protocol.EquipProtocol.EquipInfo.getDefaultInstance()) return this;
        if (other.getId() != 0) {
          setId(other.getId());
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.getLevel() != 0) {
          setLevel(other.getLevel());
        }
        if (other.getQuality() != 0) {
          setQuality(other.getQuality());
        }
        if (other.getPart() != 0) {
          setPart(other.getPart());
        }
        if (other.getDurability() != 0) {
          setDurability(other.getDurability());
        }
        if (other.getMaxDurability() != 0) {
          setMaxDurability(other.getMaxDurability());
        }
        if (other.getHp() != 0) {
          setHp(other.getHp());
        }
        if (other.getMp() != 0) {
          setMp(other.getMp());
        }
        if (other.getPhyAttack() != 0) {
          setPhyAttack(other.getPhyAttack());
        }
        if (other.getMagicAttack() != 0) {
          setMagicAttack(other.getMagicAttack());
        }
        if (other.getPhyDefense() != 0) {
          setPhyDefense(other.getPhyDefense());
        }
        if (other.getMagicDefense() != 0) {
          setMagicDefense(other.getMagicDefense());
        }
        if (other.getAttackSpeed() != 0D) {
          setAttackSpeed(other.getAttackSpeed());
        }
        if (other.getMoveSpeed() != 0D) {
          setMoveSpeed(other.getMoveSpeed());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.game.protocol.EquipProtocol.EquipInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.game.protocol.EquipProtocol.EquipInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int id_ ;
      /**
       * <code>int32 id = 1;</code>
       * @return The id.
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>int32 id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(int value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 2;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 2;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 2;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 2;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private int level_ ;
      /**
       * <code>int32 level = 3;</code>
       * @return The level.
       */
      public int getLevel() {
        return level_;
      }
      /**
       * <code>int32 level = 3;</code>
       * @param value The level to set.
       * @return This builder for chaining.
       */
      public Builder setLevel(int value) {
        
        level_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 level = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearLevel() {
        
        level_ = 0;
        onChanged();
        return this;
      }

      private int quality_ ;
      /**
       * <code>int32 quality = 4;</code>
       * @return The quality.
       */
      public int getQuality() {
        return quality_;
      }
      /**
       * <code>int32 quality = 4;</code>
       * @param value The quality to set.
       * @return This builder for chaining.
       */
      public Builder setQuality(int value) {
        
        quality_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 quality = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearQuality() {
        
        quality_ = 0;
        onChanged();
        return this;
      }

      private int part_ ;
      /**
       * <code>int32 part = 5;</code>
       * @return The part.
       */
      public int getPart() {
        return part_;
      }
      /**
       * <code>int32 part = 5;</code>
       * @param value The part to set.
       * @return This builder for chaining.
       */
      public Builder setPart(int value) {
        
        part_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 part = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearPart() {
        
        part_ = 0;
        onChanged();
        return this;
      }

      private int durability_ ;
      /**
       * <code>int32 durability = 6;</code>
       * @return The durability.
       */
      public int getDurability() {
        return durability_;
      }
      /**
       * <code>int32 durability = 6;</code>
       * @param value The durability to set.
       * @return This builder for chaining.
       */
      public Builder setDurability(int value) {
        
        durability_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 durability = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearDurability() {
        
        durability_ = 0;
        onChanged();
        return this;
      }

      private int maxDurability_ ;
      /**
       * <code>int32 maxDurability = 7;</code>
       * @return The maxDurability.
       */
      public int getMaxDurability() {
        return maxDurability_;
      }
      /**
       * <code>int32 maxDurability = 7;</code>
       * @param value The maxDurability to set.
       * @return This builder for chaining.
       */
      public Builder setMaxDurability(int value) {
        
        maxDurability_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 maxDurability = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxDurability() {
        
        maxDurability_ = 0;
        onChanged();
        return this;
      }

      private int hp_ ;
      /**
       * <code>int32 hp = 8;</code>
       * @return The hp.
       */
      public int getHp() {
        return hp_;
      }
      /**
       * <code>int32 hp = 8;</code>
       * @param value The hp to set.
       * @return This builder for chaining.
       */
      public Builder setHp(int value) {
        
        hp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 hp = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearHp() {
        
        hp_ = 0;
        onChanged();
        return this;
      }

      private int mp_ ;
      /**
       * <code>int32 mp = 9;</code>
       * @return The mp.
       */
      public int getMp() {
        return mp_;
      }
      /**
       * <code>int32 mp = 9;</code>
       * @param value The mp to set.
       * @return This builder for chaining.
       */
      public Builder setMp(int value) {
        
        mp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 mp = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearMp() {
        
        mp_ = 0;
        onChanged();
        return this;
      }

      private int phyAttack_ ;
      /**
       * <code>int32 phyAttack = 10;</code>
       * @return The phyAttack.
       */
      public int getPhyAttack() {
        return phyAttack_;
      }
      /**
       * <code>int32 phyAttack = 10;</code>
       * @param value The phyAttack to set.
       * @return This builder for chaining.
       */
      public Builder setPhyAttack(int value) {
        
        phyAttack_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 phyAttack = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearPhyAttack() {
        
        phyAttack_ = 0;
        onChanged();
        return this;
      }

      private int magicAttack_ ;
      /**
       * <code>int32 magicAttack = 11;</code>
       * @return The magicAttack.
       */
      public int getMagicAttack() {
        return magicAttack_;
      }
      /**
       * <code>int32 magicAttack = 11;</code>
       * @param value The magicAttack to set.
       * @return This builder for chaining.
       */
      public Builder setMagicAttack(int value) {
        
        magicAttack_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 magicAttack = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearMagicAttack() {
        
        magicAttack_ = 0;
        onChanged();
        return this;
      }

      private int phyDefense_ ;
      /**
       * <code>int32 phyDefense = 12;</code>
       * @return The phyDefense.
       */
      public int getPhyDefense() {
        return phyDefense_;
      }
      /**
       * <code>int32 phyDefense = 12;</code>
       * @param value The phyDefense to set.
       * @return This builder for chaining.
       */
      public Builder setPhyDefense(int value) {
        
        phyDefense_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 phyDefense = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearPhyDefense() {
        
        phyDefense_ = 0;
        onChanged();
        return this;
      }

      private int magicDefense_ ;
      /**
       * <code>int32 magicDefense = 13;</code>
       * @return The magicDefense.
       */
      public int getMagicDefense() {
        return magicDefense_;
      }
      /**
       * <code>int32 magicDefense = 13;</code>
       * @param value The magicDefense to set.
       * @return This builder for chaining.
       */
      public Builder setMagicDefense(int value) {
        
        magicDefense_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 magicDefense = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearMagicDefense() {
        
        magicDefense_ = 0;
        onChanged();
        return this;
      }

      private double attackSpeed_ ;
      /**
       * <code>double attackSpeed = 14;</code>
       * @return The attackSpeed.
       */
      public double getAttackSpeed() {
        return attackSpeed_;
      }
      /**
       * <code>double attackSpeed = 14;</code>
       * @param value The attackSpeed to set.
       * @return This builder for chaining.
       */
      public Builder setAttackSpeed(double value) {
        
        attackSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double attackSpeed = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearAttackSpeed() {
        
        attackSpeed_ = 0D;
        onChanged();
        return this;
      }

      private double moveSpeed_ ;
      /**
       * <code>double moveSpeed = 15;</code>
       * @return The moveSpeed.
       */
      public double getMoveSpeed() {
        return moveSpeed_;
      }
      /**
       * <code>double moveSpeed = 15;</code>
       * @param value The moveSpeed to set.
       * @return This builder for chaining.
       */
      public Builder setMoveSpeed(double value) {
        
        moveSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double moveSpeed = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearMoveSpeed() {
        
        moveSpeed_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:EquipInfo)
    }

    // @@protoc_insertion_point(class_scope:EquipInfo)
    private static final com.game.protocol.EquipProtocol.EquipInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.game.protocol.EquipProtocol.EquipInfo();
    }

    public static com.game.protocol.EquipProtocol.EquipInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EquipInfo>
        PARSER = new com.google.protobuf.AbstractParser<EquipInfo>() {
      @java.lang.Override
      public EquipInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EquipInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<EquipInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EquipInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.game.protocol.EquipProtocol.EquipInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_EquipInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_EquipInfo_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013Equip.proto\"\220\002\n\tEquipInfo\022\n\n\002id\030\001 \001(\005\022" +
      "\014\n\004name\030\002 \001(\t\022\r\n\005level\030\003 \001(\005\022\017\n\007quality\030" +
      "\004 \001(\005\022\014\n\004part\030\005 \001(\005\022\022\n\ndurability\030\006 \001(\005\022" +
      "\025\n\rmaxDurability\030\007 \001(\005\022\n\n\002hp\030\010 \001(\005\022\n\n\002mp" +
      "\030\t \001(\005\022\021\n\tphyAttack\030\n \001(\005\022\023\n\013magicAttack" +
      "\030\013 \001(\005\022\022\n\nphyDefense\030\014 \001(\005\022\024\n\014magicDefen" +
      "se\030\r \001(\005\022\023\n\013attackSpeed\030\016 \001(\001\022\021\n\tmoveSpe" +
      "ed\030\017 \001(\001B\"\n\021com.game.protocolB\rEquipProt" +
      "ocolb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_EquipInfo_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_EquipInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_EquipInfo_descriptor,
        new java.lang.String[] { "Id", "Name", "Level", "Quality", "Part", "Durability", "MaxDurability", "Hp", "Mp", "PhyAttack", "MagicAttack", "PhyDefense", "MagicDefense", "AttackSpeed", "MoveSpeed", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
